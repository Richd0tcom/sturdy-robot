// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateMultipleInvoiceItems implements pgx.CopyFromSource.
type iteratorForCreateMultipleInvoiceItems struct {
	rows                 []CreateMultipleInvoiceItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateMultipleInvoiceItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateMultipleInvoiceItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].InvoiceID,
		r.rows[0].VersionID,
		r.rows[0].Quantity,
		r.rows[0].UnitPrice,
		r.rows[0].Subtotal,
	}, nil
}

func (r iteratorForCreateMultipleInvoiceItems) Err() error {
	return nil
}

func (q *Queries) CreateMultipleInvoiceItems(ctx context.Context, arg []CreateMultipleInvoiceItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"invoice_items"}, []string{"invoice_id", "version_id", "quantity", "unit_price", "subtotal"}, &iteratorForCreateMultipleInvoiceItems{rows: arg})
}
