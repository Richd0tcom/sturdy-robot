// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateActivityLog(ctx context.Context, arg CreateActivityLogParams) (ActivityLog, error)
	CreateBranch(ctx context.Context, arg CreateBranchParams) (Branch, error)
	CreateCategory(ctx context.Context, arg CreateCategoryParams) (Category, error)
	CreateCurrency(ctx context.Context, arg CreateCurrencyParams) (Currency, error)
	CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error)
	// Insert inventory record
	CreateInventoryRecord(ctx context.Context, arg CreateInventoryRecordParams) (Inventory, error)
	CreateInvoice(ctx context.Context, arg CreateInvoiceParams) (Invoice, error)
	CreateInvoiceItem(ctx context.Context, arg CreateInvoiceItemParams) (InvoiceItem, error)
	CreateMultipleInvoiceItems(ctx context.Context, arg []CreateMultipleInvoiceItemsParams) (int64, error)
	CreateOrganization(ctx context.Context, arg CreateOrganizationParams) (Organization, error)
	CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error)
	// Insert payment info
	CreatePaymentInfo(ctx context.Context, arg CreatePaymentInfoParams) (PaymentInfo, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error)
	CreateProductVersion(ctx context.Context, arg CreateProductVersionParams) (ProductVersion, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteCustomerByID(ctx context.Context, id pgtype.UUID) error
	GetActivityLogByEntityID(ctx context.Context, entityID pgtype.UUID) ([]ActivityLog, error)
	GetActivityLogsByUserID(ctx context.Context, userID pgtype.UUID) ([]ActivityLog, error)
	GetBranchByID(ctx context.Context, id pgtype.UUID) (Branch, error)
	GetCategoriesByBranchID(ctx context.Context, branchID pgtype.UUID) ([]Category, error)
	GetCurrencyByID(ctx context.Context, id pgtype.UUID) (Currency, error)
	GetCustomerByEmail(ctx context.Context, email pgtype.Text) (Customer, error)
	GetCustomerById(ctx context.Context, id pgtype.UUID) (Customer, error)
	GetCustomersByBranch(ctx context.Context, branchID pgtype.UUID) ([]Customer, error)
	// Get inventory by branch ID
	GetInventoryByBranchID(ctx context.Context, branchID pgtype.UUID) ([]Inventory, error)
	// Get inventory by ID
	GetInventoryByID(ctx context.Context, id pgtype.UUID) (Inventory, error)
	// Get inventory by version ID
	GetInventoryByVersionID(ctx context.Context, versionID pgtype.UUID) (Inventory, error)
	GetInvoiceByID(ctx context.Context, id pgtype.UUID) (Invoice, error)
	GetInvoiceItemsByInvoiceID(ctx context.Context, invoiceID pgtype.UUID) ([]GetInvoiceItemsByInvoiceIDRow, error)
	GetInvoicesCreatedByUser(ctx context.Context, createdBy pgtype.UUID) ([]Invoice, error)
	GetOrganizationByID(ctx context.Context, id pgtype.UUID) (Organization, error)
	// Get payment by ID
	GetPaymentByID(ctx context.Context, id pgtype.UUID) (Payment, error)
	GetPaymentInfoByUserID(ctx context.Context, userID pgtype.UUID) (PaymentInfo, error)
	// Get payments by invoice ID
	GetPaymentsByInvoiceID(ctx context.Context, invoiceID pgtype.UUID) ([]Payment, error)
	GetProductVersionsByProductID(ctx context.Context, productID pgtype.UUID) ([]ProductVersion, error)
	GetProductsByBranchID(ctx context.Context, branchID pgtype.UUID) (Product, error)
	GetProductsByID(ctx context.Context, id pgtype.UUID) (Product, error)
	GetTotalsByStatuses(ctx context.Context, createdBy pgtype.UUID) (GetTotalsByStatusesRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserById(ctx context.Context, id pgtype.UUID) (User, error)
	// Update inventory
	UpdateInventory(ctx context.Context, arg UpdateInventoryParams) (Inventory, error)
	UpdateInvoice(ctx context.Context, arg UpdateInvoiceParams) (Invoice, error)
	UpdateInvoiceItem(ctx context.Context, arg UpdateInvoiceItemParams) (InvoiceItem, error)
	// Update payment
	UpdatePayment(ctx context.Context, arg UpdatePaymentParams) (Payment, error)
	UpdatePaymentInfo(ctx context.Context, arg UpdatePaymentInfoParams) error
	UpdateProduct(ctx context.Context, arg UpdateProductParams) (Product, error)
	UpdateProductVersion(ctx context.Context, arg UpdateProductVersionParams) (ProductVersion, error)
}

var _ Querier = (*Queries)(nil)
